/**********************************************/
/****************简单的万年历******************/
/**********************************************/
/****功能：能够显示日期和时间,并能完成闰年*****/
/**********和大小月的判断年历******************/
/**********************************************/
/****引脚：1602使用清翔开发板的引脚************/
/**********矩阵键盘使用P0的8个引脚*************/
/**********************************************/
/****按键：1时2分3秒加  5时6分7秒减************/
/**********9年10月11日期加 13年14月15日期减****/
/**更改日期摁4键，先摁4再摁修改，再摁4，再改***/
/**********************************************/
/****作者：刘鑫**********日期：2020-12-12******/
/**********************************************/





#include "reg52.h"
#include "1602.h"
#include "delay.h"
#include "Key.h"

uchar num;
int s;

void main()
{	
	int y,m,d;
	int h,min;
	
	TMOD=0x01;
	TH0=(65535-45872)/256;
	TL0=(65535-45872)%256;
	EA=1;
	ET0=1;
	TR0=1;
	
	init();
	
	y=2020;
	m=12;
	d=12;
	h=16;
	min=33;
	s=0;
	
/*****************************|
|******日期逻辑设置***********|
|*****************************/	
	A:
	while(1)
	{		
/******************************|
|***********扫描键盘***********|
|******************************/
		key_scan();

		if(Key_Num==1)
		{
			y++;
		}
		if(Key_Num==2)
		{
			m++;
		}
		if(Key_Num==3)
		{
			d++;
		}
		if(Key_Num==5)
		{
			y--;
		}
		if(Key_Num==6)
		{
			m--;
		}
		if(Key_Num==7)
		{
			d--;
		}
		if(Key_Num==9)
		{
			h++;
		}
		if(Key_Num==10)
		{
			min++;
		}
		if(Key_Num==11)
		{
			s++;
		}
		if(Key_Num==13)
		{
			h--;
		}
		if(Key_Num==14)
		{
			min--;
		}
		if(Key_Num==15)
		{
			s--;
		}
		goto B;
	}
		
		
/******************************|
|*************显示*************|
|******************************/	
		B:while(1)
	{
		key_scan();
		lcd_wdat(0x80,y);
		Write_Str(0x84,1,"-");
		lcd_wdat1(0x85,m);
		Write_Str(0x87,1,"-");
		lcd_wdat1(0x88,d);
		
		lcd_wdat1(0x80+0x40,h);
		Write_Str(0x82+0x40,1,":");
		lcd_wdat1(0x83+0x40,min);
		Write_Str(0x85+0x40,1,":");
		lcd_wdat1(0x86+0x40,s);
/******************************|
|***********判断进位***********|
|******************************/		
		if(m>12)
		{
			m=1;
			y++;
		}
		else if(m<1)
		{
			m=12;
			y--;
		}
		
		if(m==1||m==3||m==5||m==7||m==8||m==10||m==12)
		{
			if(d>31)
			{
				d=1;
				m++;
			}
			else if(d<1)
			{
				if(m==5||m==7||m==10||m==12)
				{
					d=30;
					m--;
				}
				else if(m==2||m==4||m==6||m==8||m==9||m==11||m==1)
				{
					d=31;
					m--;
				}
				else if(m==3&&(y%4==0)&&(y%100!=0))
				{
					d=29;
					m--;
				}
				else
				{
					d=28;
					m--;
				}
			}
		}
		
		if(m==4||m==6||m==9||m==11)
		{
			if(d>30)
			{
				d=1;
				m++;
			}
			else if(d<1)
			{
			if(m==5||m==7||m==10||m==12)
				{
					d=30;
					m--;
				}
				else if(m==2||m==4||m==6||m==8||m==9||m==11||m==1)
				{
					d=31;
					m--;
				}
				else if(m==3&&(y%4==0)&&(y%100!=0))
				{
					d=29;
					m--;
				}
				else
				{
					d=28;
					m--;
				}
			}
		}
		
		if(m==2)
		{
			if((y%4==0)&&(y%100!=0))
			{
				if(d>29)
				{
					d=1;
					m++;
				}
				if(d<1)
				{
					d=31;
					m--;
				}
			}
			else 
			{
				if(d>28)
				{
					d=1;
					m++;
				}
				if(d<1)
				{
					d=31;
					m--;
				}
			}
		}
		
		
		if(h>23)
		{
			h=0;
			d++;
		}
		else if(h<0)
		{
			h=23;
		}
		if(min>59)
		{
			min=0;
			h++;
		}
		else if(min<0)
		{
			min=59;
			h--;
		}
		if(s>59)
		{
			s=0;
			min++;
		}
		else if(s<0)
		{
			s=59;
			min--;
		}	
		
		
		if(Key_Num==4)
			goto A;
	}
}

void T0_time() interrupt 1
{
	TH0=(65535-45872)/256;
	TL0=(65535-45872)%256;
	num++;
			if(num==20)
		{
			s++;
			num=0;
		}
}
